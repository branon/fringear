<!doctype html>
<html lang="en">
    <head>
        <title>Argon Sound Demo</title>
        <link rel="apple-touch-icon" href="images/sample_icon_57x57.png" />
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
        <meta name="arenabled" />
        <script>
            var myAppController =
            {

                onArgonReady : function()
                {
                    var urls = []; // sounds go here

                }

                // do something with vars
            };

            document.addEventListener("AR.ArgonReadyEvent", myAppController.onArgonReady);


            var context
            if (typeof AudioContext !== "undefined") {
              context = new AudioContext();
            } else if (typeof webkitAudioContext !== "undefined") {
              context = new webkitAudioContext();
            }

            var soundBuffer; //buffer to use
            loadSound("audio/roost.mp3"); //puts sound into buffer

            function loadSound(url) {
              var request = new XMLHttpRequest();
              request.open('GET', url, true);
              request.responseType = 'arraybuffer';

              // Decode asynchronously
              request.onload = function() {
                context.decodeAudioData(request.response, function(buffer) {
                  soundBuffer = buffer;
                  console.log(arguments)
                  playSound(soundBuffer); //play when loaded
                }, function() {
                  console.error('Error!');
                });
              }
              request.send();
            }


            function _watch(){
              console.log(context.destination);
              window.webkitRequestAnimationFrame(_watch)
            }

            function playSound(buffer) {
              var source = context.createBufferSource(), // creates a sound source

              //Set the volume
              volumeNode = context.createGainNode();
              volumeNode.gain.value = 0.9;

              // Wiring
              source.connect(volumeNode);
              volumeNode.connect(context.destination);


              _watch()
              source.noteOn(0); // when the source should start playing
              source.connect(context.destination); //connect source to destination, allows it to play 
            }
        </script>
    </head>

    <body>
        <div style="background-color: green; width: 100px; height: 100px;">test</div>
<!--
        <script src="http://argon.gatech.edu/argon_o.js"></script>
-->
    </body>


</html>